<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Hexo 安裝教學</title>
      <link href="/blog/2018/04/14/hello-world/"/>
      <url>/blog/2018/04/14/hello-world/</url>
      <content type="html"><![CDATA[<h2 id="介紹-Hexo"><a href="#介紹-Hexo" class="headerlink" title="介紹 Hexo"></a>介紹 Hexo</h2><p><a href="https://hexo.io/zh-tw/" target="_blank" rel="noopener">Hexo</a>是一款可自定義，輕量級，可部署在 Github 的部落格框架。</p><h2 id="開始"><a href="#開始" class="headerlink" title="開始"></a>開始</h2><blockquote><p>環境需求</p><ul><li>Git</li><li>Nodejs</li></ul></blockquote><h3 id="下載-Nodejs-和-Git"><a href="#下載-Nodejs-和-Git" class="headerlink" title="下載 Nodejs 和 Git"></a>下載 Nodejs 和 Git</h3><p><a href="https://git-scm.com/" target="_blank" rel="noopener">Git官網</a><br><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node官網</a></p><p>我們安裝 Node 後，就能使用 NPM 來管理我們的工具包，因為 Hexo 多半是用指令來安裝套件、執行和部署。</p><h3 id="安裝-Hexo-cli"><a href="#安裝-Hexo-cli" class="headerlink" title="安裝 Hexo-cli"></a>安裝 Hexo-cli</h3><p>將 Hexo-cli 裝在全局，才可以使用 Hexo 下指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="hexo-創建一個部落格"><a href="#hexo-創建一個部落格" class="headerlink" title="hexo 創建一個部落格"></a>hexo 創建一個部落格</h3><p>它會自動生成一包資料夾，進到資料夾將套件安裝起來</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><h3 id="生成新文章"><a href="#生成新文章" class="headerlink" title="生成新文章"></a>生成新文章</h3><p>新增一篇新文章，預設會在 _posts 下面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>或是新增一個分類，它會自動在幫你新增此分類下的第一篇文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page <span class="string">"about"</span></span><br></pre></td></tr></table></figure><h3 id="清除已生成靜態文件"><a href="#清除已生成靜態文件" class="headerlink" title="清除已生成靜態文件"></a>清除已生成靜態文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><h3 id="生成靜態文件"><a href="#生成靜態文件" class="headerlink" title="生成靜態文件"></a>生成靜態文件</h3><p>如果有頁面結構有修正，需要清除後重新生成，才看得到改變。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><h3 id="運行"><a href="#運行" class="headerlink" title="運行"></a>運行</h3><p>可以運行在 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 上看一下結果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>先在 _config.yml 先設定好要 push 的地方位置，在這裡也要設定一下SSH，等等才能順利傳上去。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>安裝 hexo-deployer-git 套件，才能夠用指令的方式部署到 Github。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>下了指令·就會按照所設定的，自動部署。<br>就可以在自己的 yourname.github.io 上看到自己的部落格。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><h3 id="更換版型"><a href="#更換版型" class="headerlink" title="更換版型"></a>更換版型</h3><p>先到 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo</a> 挑一個自己喜歡的版型，然後將它 pull 下來到 themes 資料夾內。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/imbyron/hexo-theme-icalm.git ./themes/icalm</span><br></pre></td></tr></table></figure><p>然後在 _config.yml 設定</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: icalm</span><br></pre></td></tr></table></figure><p>每個版型可能有不同的配置，大概參考一下作者的文件修改。</p><p>如果有自己想要換圖或改CSS的地方，只要進到版型的 source 裡去修改即可。</p>]]></content>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>部落格緣起</title>
      <link href="/blog/2018/04/09/post/"/>
      <url>/blog/2018/04/09/post/</url>
      <content type="html"><![CDATA[<h2 id="緣起"><a href="#緣起" class="headerlink" title="緣起"></a>緣起</h2><p>其實之前就有想要寫技術部落格的衝動，只是一直不曉得該挑哪個平台好，但我多少想專業些，希望可以架個只有工程師才能寫的部落格，展現一點內涵，畢竟看文章的都是有內涵的人士。 hexo 一款輕量級又可靈活安裝零組件的部落格，可以部署到 github 的空間，剛好滿足我那點需求。</p><p>目前部落格雖然有點陽春，但未來更多小功能還持續摸索中，敬請期待。</p><h2 id="部落格撰文方向"><a href="#部落格撰文方向" class="headerlink" title="部落格撰文方向"></a>部落格撰文方向</h2><h3 id="前端工程"><a href="#前端工程" class="headerlink" title="前端工程"></a>前端工程</h3><p>身為前端工程師，自然是將所學會的前端技術分享在部落格之中，前端領域發展速度相當驚人，有時我們問題的解決都是仰賴別人分享的經驗，因此為前端貢獻一些資源，說不定也能解決哪個角落的問題。雖然我無法像那些民間狂人，一有新技術就分析拆解，理出技術的核心邏輯，但至少講解如何使用，我還是可以辦到的。</p><p>相信一點一滴分享的力量，可以解決新手很多小問題，少走很多彎路。</p><h3 id="學習歷程"><a href="#學習歷程" class="headerlink" title="學習歷程"></a>學習歷程</h3><p>這部落格也是學習自律，來紀錄學習技術的歷程。未來可能會遇到很多新技術，或者是相關領域的技術發展，抱持著不能熟練也要略懂的精神，勢必要研究一下，再寫些玩趣的結果，雖然不表示技術力會因而提升多少，但在這過程當中會得到什麼啟發也說不定，工程師的第一標語就是，終身學習。</p><h3 id="期望"><a href="#期望" class="headerlink" title="期望"></a>期望</h3><p>聚沙成塔，持之以恆。</p>]]></content>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> 前端工程 </tag>
            
        </tags>
      
    </entry>
    
  
  
    
    <entry>
      <title>關於作者</title>
      <link href="/blog/about/index.html"/>
      <url>/blog/about/index.html</url>
      <content type="html"><![CDATA[<h2 id="個人簡介"><a href="#個人簡介" class="headerlink" title="個人簡介"></a>個人簡介</h2><p>從自學程式開始，直到專職工作，撰寫網頁前端約有四年經歷，現在任職在一間小資訊公司當前端工程師。</p><p>Javascript 忽然在幾年前淹沒了世界，前端工程師忽然可以做的事情變多了，我也為此投注了不少技能點數，後來我漸漸專注建構自己的開發環境，好像蓋一棟自己的城堡，才發現寫了幾年程式，直到最近開始有些得心應手之美。</p><p>時間的推移也讓人成長，關心的事情也不同了，比起絢麗的效果，資訊安全、有效管理、提升開發效率這些更來得重要。</p><p>我是個愛深思的人，平常感興趣的有商業策略、文學、妥拉…等等，歡迎交流。</p><h3 id="領域"><a href="#領域" class="headerlink" title="領域"></a>領域</h3><ul><li>HTML / CSS</li><li>Javascript</li><li>Node / NPM</li><li>Vue</li><li>Bootstrap 3</li><li>Webpack</li><li>SCSS</li><li>Git</li></ul><h3 id="聯絡方式"><a href="#聯絡方式" class="headerlink" title="聯絡方式"></a>聯絡方式</h3><p>信箱 ： <a href="mailto:a2825818@gmail.com" target="_blank" rel="noopener">a2825818@gmail.com</a></p>]]></content>
    </entry>
    
  
</search>
